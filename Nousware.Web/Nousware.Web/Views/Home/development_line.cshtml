<section id="logo" class="clients-logo-section" data-background="gray">
    <div class="container">
        <div class="logo-items">
            <div class="item wow fadeInRight" data-wow-delay="0.2s">
                <a block-number="0" class="hide-block">
                    <img src="/Content/assets/images/logo/1.png" alt="Logo 1">
                </a>
            </div><!-- /.item -->
            <div class="item wow fadeInRight" data-wow-delay="0.3s">
                <a block-number="1" class="hide-block">
                    <img src="/Content/assets/images/logo/2.png" alt="Logo 2">
                </a>
            </div><!-- /.item -->
            <p class="infoblock padding-60" id="block0">
                Model–view–viewmodel (MVVM) is a software architectural pattern.
                MVVM is a variation of Martin Fowler's Presentation Model design pattern.
                Like Fowler's Presentation Model, MVVM abstracts a view's state and behavior.
                However, whereas the Presentation Model abstracts a view (i.e., creates a view model)
                in a manner not dependent on a specific user-interface platform, MVVM was developed by Microsoft architects
                Ken Cooper and Ted Peters specifically to simplify event-driven programming of user interfaces—by exploiting
                features of Windows Presentation Foundation (WPF) (Microsoft's .NET graphics system) and Silverlight (WPF's Internet application derivative).
                John Gossman, one of Microsoft's WPF and Silverlight architects, announced MVVM on his blog in 2005.
                MVVM and Presentation Model both derive from the model–view–controller pattern (MVC).
                MVVM facilitates a separation of development of the graphical user interface (either as markup language or GUI code)
                from development of the business logic or back-end logic (the data model). The view model of MVVM is a value converter;
                meaning the view model is responsible for exposing (converting) the data objects from the model in such a way objects
                are easily managed and consumed. In this respect, the view model is more model than view, and handles most if not all of the
                view's display logic. The view model may implement a mediator pattern, organizing access to the back-end logic around the set of use cases supported by the view.
            </p>
            <p class="infoblock padding-60" id="block1">
                A model represents the state of a particular aspect of the application.
                A controller handles interactions and updates the model to reflect a change in state of the application,
                and then passes information to the view. A view accepts necessary information from the controller
                and renders a user interface to display that information.
                In April 2009, the ASP.NET MVC source code was released under the Microsoft Public License (MS-PL).
                "ASP.NET MVC framework is a lightweight, highly testable presentation framework that is integrated with existing
                ASP.NET features. Some of these integrated features are master pages and membership-based authentication.
                The MVC framework is defined in the System.Web.Mvc assembly."
                The ASP.NET MVC framework couples the models, views, and controllers using interface-based contracts,
                thereby allowing each component to be tested independently.
            </p>

        </div><!-- /.logo-items -->
    </div><!-- /.container -->


    <script>
        $(document).ready(function () {
          $(".infoblock").hide();
          $(".hide-block").click(function () {
              $(".infoblock").slideUp("slow");
              $(".hide-block").removeClass("active-block");
              $(this).addClass("active-block");
              if ($(this).attr('block-number') == 0) {
                  $("#block0").slideToggle("slow");
              } else if ($(this).attr('block-number') == 1) {
                  $("#block1").slideToggle("slow");
              }

	        });
	      });
    </script>

</section><!-- /#logo -->
